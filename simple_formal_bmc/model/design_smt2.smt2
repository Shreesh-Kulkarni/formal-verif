; SMT-LIBv2 description generated by Yosys 0.34+43 (git sha1 d21c464ae, clang 10.0.0-4ubuntu1 -fPIC -Os)
; yosys-smt2-module simple
(declare-sort |simple_s| 0)
(declare-fun |simple_is| (|simple_s|) Bool)
(declare-fun |simple#0| (|simple_s|) (_ BitVec 64)) ; \a
(declare-fun |simple#1| (|simple_s|) (_ BitVec 64)) ; \b
(define-fun |simple#2| ((state |simple_s|)) (_ BitVec 64) (bvnot (|simple#1| state))) ; $not$simple.v:12$13_Y
(define-fun |simple#3| ((state |simple_s|)) (_ BitVec 64) (bvadd (|simple#2| state) #b0000000000000000000000000000000000000000000000000000000000000001)) ; $add$simple.v:12$14_Y
(define-fun |simple#4| ((state |simple_s|)) (_ BitVec 64) (bvadd (|simple#0| state) (|simple#3| state))) ; \y
; yosys-smt2-output y 64
; yosys-smt2-wire y 64
(define-fun |simple_n y| ((state |simple_s|)) (_ BitVec 64) (|simple#4| state))
; yosys-smt2-input b 64
; yosys-smt2-wire b 64
; yosys-smt2-witness {"offset": 0, "path": ["\\b"], "smtname": "b", "smtoffset": 0, "type": "input", "width": 64}
(define-fun |simple_n b| ((state |simple_s|)) (_ BitVec 64) (|simple#1| state))
; yosys-smt2-input a 64
; yosys-smt2-wire a 64
; yosys-smt2-witness {"offset": 0, "path": ["\\a"], "smtname": "a", "smtoffset": 0, "type": "input", "width": 64}
(define-fun |simple_n a| ((state |simple_s|)) (_ BitVec 64) (|simple#0| state))
(define-fun |simple_a| ((state |simple_s|)) Bool true)
(define-fun |simple_u| ((state |simple_s|)) Bool true)
(define-fun |simple_i| ((state |simple_s|)) Bool true)
(define-fun |simple_h| ((state |simple_s|)) Bool true)
(define-fun |simple_t| ((state |simple_s|) (next_state |simple_s|)) Bool true) ; end of module simple
; yosys-smt2-module simple_formal
(declare-sort |simple_formal_s| 0)
(declare-fun |simple_formal_is| (|simple_formal_s|) Bool)
; yosys-smt2-cell simple simple
; yosys-smt2-witness {"path": ["\\simple"], "smtname": "simple", "type": "cell"}
(declare-fun |simple_formal#0| (|simple_formal_s|) (_ BitVec 64)) ; \y
(declare-fun |simple_formal_h simple| (|simple_formal_s|) |simple_s|)
; yosys-smt2-output y 64
; yosys-smt2-wire y 64
(define-fun |simple_formal_n y| ((state |simple_formal_s|)) (_ BitVec 64) (|simple_formal#0| state))
(declare-fun |simple_formal#1| (|simple_formal_s|) (_ BitVec 64)) ; \b
; yosys-smt2-input b 64
; yosys-smt2-wire b 64
; yosys-smt2-witness {"offset": 0, "path": ["\\b"], "smtname": "b", "smtoffset": 0, "type": "input", "width": 64}
(define-fun |simple_formal_n b| ((state |simple_formal_s|)) (_ BitVec 64) (|simple_formal#1| state))
(declare-fun |simple_formal#2| (|simple_formal_s|) (_ BitVec 64)) ; \a
; yosys-smt2-input a 64
; yosys-smt2-wire a 64
; yosys-smt2-witness {"offset": 0, "path": ["\\a"], "smtname": "a", "smtoffset": 0, "type": "input", "width": 64}
(define-fun |simple_formal_n a| ((state |simple_formal_s|)) (_ BitVec 64) (|simple_formal#2| state))
(define-fun |simple_formal#3| ((state |simple_formal_s|)) (_ BitVec 64) (bvsub (|simple_formal#2| state) (|simple_formal#1| state))) ; $sub$simple_formal.v:16$8_Y
(define-fun |simple_formal#4| ((state |simple_formal_s|)) Bool (= (|simple_formal#0| state) (|simple_formal#3| state))) ; $0$formal$simple_formal.v:15$1_CHECK[0:0]$4
; yosys-smt2-assert 0 $assert$simple_formal.v:15$11 simple_formal.v:15.16-16.19
(define-fun |simple_formal_a 0| ((state |simple_formal_s|)) Bool (or (|simple_formal#4| state) (not true))) ; $assert$simple_formal.v:15$11
(define-fun |simple_formal_a| ((state |simple_formal_s|)) Bool (and
  (|simple_formal_a 0| state)
  (|simple_a| (|simple_formal_h simple| state))
))
(define-fun |simple_formal_u| ((state |simple_formal_s|)) Bool 
  (|simple_u| (|simple_formal_h simple| state))
)
(define-fun |simple_formal_i| ((state |simple_formal_s|)) Bool 
  (|simple_i| (|simple_formal_h simple| state))
)
(define-fun |simple_formal_h| ((state |simple_formal_s|)) Bool (and
  (= (|simple_formal_is| state) (|simple_is| (|simple_formal_h simple| state)))
  (= (|simple_formal#0| state) (|simple_n y| (|simple_formal_h simple| state))) ; simple.y
  (= (|simple_formal#1| state) (|simple_n b| (|simple_formal_h simple| state))) ; simple.b
  (= (|simple_formal#2| state) (|simple_n a| (|simple_formal_h simple| state))) ; simple.a
  (|simple_h| (|simple_formal_h simple| state))
))
(define-fun |simple_formal_t| ((state |simple_formal_s|) (next_state |simple_formal_s|)) Bool 
  (|simple_t| (|simple_formal_h simple| state) (|simple_formal_h simple| next_state))
) ; end of module simple_formal
; yosys-smt2-topmod simple_formal
; end of yosys output
